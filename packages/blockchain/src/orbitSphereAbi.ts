const orbitSphereAbi = [
  {
    inputs: [{ internalType: "address", name: "tetherUSD", type: "address" }],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "AccessControlBadConfirmation", type: "error" },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "bytes32", name: "neededRole", type: "bytes32" },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "address", name: "owner", type: "address" },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "approver", type: "address" }],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "operator", type: "address" }],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "receiver", type: "address" }],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "sender", type: "address" }],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      { internalType: "uint256", name: "provided", type: "uint256" },
      { internalType: "uint256", name: "required", type: "uint256" },
    ],
    name: "OrbitSphere__RentalDurationTooShort",
    type: "error",
  },
  { inputs: [], name: "OrbitSphere__TransfersNotAllowed", type: "error" },
  { inputs: [], name: "OrbitSphere__UnauthorizedTenant", type: "error" },
  {
    inputs: [
      { internalType: "bytes32", name: "instanceType", type: "bytes32" },
    ],
    name: "OrbitSphere__UnavailableInstanceType",
    type: "error",
  },
  {
    inputs: [{ internalType: "bytes32", name: "region", type: "bytes32" }],
    name: "OrbitSphere__UnavailableRegion",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "token", type: "address" }],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "instanceType",
        type: "bytes32",
      },
    ],
    name: "AWSInstanceTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "instanceType",
        type: "bytes32",
      },
    ],
    name: "AWSInstanceTypeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "region",
        type: "bytes32",
      },
    ],
    name: "AWSRegionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "region",
        type: "bytes32",
      },
    ],
    name: "AWSRegionRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "region",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "sphereId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "instanceType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "sshPublicKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rentedOn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "willBeEndOn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    name: "OrbitSphereInstanceRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tenant",
        type: "address",
      },
    ],
    name: "OrbitSphereInstanceStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "sphereId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeConsumed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "OrbitSphereInstanceTerminated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "bytes32", name: "role", type: "bytes32" },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "bytes32", name: "role", type: "bytes32" },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "bytes32", name: "role", type: "bytes32" },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORBIT_SPHERE_DEPLOYER",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORBIT_SPHERE_MANAGER",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORBIT_SPHERE_TERMINATOR",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TETHER_USD",
    outputs: [
      { internalType: "contract IERC20Metadata", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "iType", type: "bytes32" },
          { internalType: "uint64", name: "hourlyRate", type: "uint64" },
          { internalType: "uint64", name: "noOfCPUs", type: "uint64" },
          { internalType: "uint64", name: "noOfGPUs", type: "uint64" },
          { internalType: "uint64", name: "memoryGBs", type: "uint64" },
        ],
        internalType: "struct IOrbitSphere.InstanceMetadata[]",
        name: "instanceTypes",
        type: "tuple[]",
      },
    ],
    name: "addInstanceTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32[]", name: "regions", type: "bytes32[]" }],
    name: "addRegions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256[]", name: "sphereIds", type: "uint256[]" },
    ],
    name: "forceTerminateSpheres",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveInstanceTypes",
    outputs: [
      { internalType: "bytes32[]", name: "instanceTypes", type: "bytes32[]" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveRegions",
    outputs: [
      { internalType: "bytes32[]", name: "regions", type: "bytes32[]" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "instanceType", type: "bytes32" },
    ],
    name: "getInstanceTypeInfo",
    outputs: [
      {
        components: [
          { internalType: "bytes32", name: "iType", type: "bytes32" },
          { internalType: "uint64", name: "hourlyRate", type: "uint64" },
          { internalType: "uint64", name: "noOfCPUs", type: "uint64" },
          { internalType: "uint64", name: "noOfGPUs", type: "uint64" },
          { internalType: "uint64", name: "memoryGBs", type: "uint64" },
        ],
        internalType: "struct IOrbitSphere.InstanceMetadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinRentalDuration",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "sphereId", type: "uint256" }],
    name: "getOrbitSphereInfo",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "sphereId", type: "uint256" },
          { internalType: "address", name: "tenant", type: "address" },
          { internalType: "bytes32", name: "region", type: "bytes32" },
          { internalType: "bytes32", name: "instanceType", type: "bytes32" },
          {
            internalType: "enum IOrbitSphere.OrbitSphereStatus",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "rentedOn", type: "uint256" },
          { internalType: "uint256", name: "willBeEndOn", type: "uint256" },
          { internalType: "uint256", name: "terminatedOn", type: "uint256" },
          { internalType: "uint256", name: "totalUsdPaid", type: "uint256" },
        ],
        internalType: "struct IOrbitSphere.SphereMetadata",
        name: "sphere",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "sphereId", type: "uint256" }],
    name: "getOrbitSphereInfoWithInstance",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "sphereId", type: "uint256" },
          { internalType: "address", name: "tenant", type: "address" },
          { internalType: "bytes32", name: "region", type: "bytes32" },
          { internalType: "bytes32", name: "instanceType", type: "bytes32" },
          {
            internalType: "enum IOrbitSphere.OrbitSphereStatus",
            name: "status",
            type: "uint8",
          },
          { internalType: "uint256", name: "rentedOn", type: "uint256" },
          { internalType: "uint256", name: "willBeEndOn", type: "uint256" },
          { internalType: "uint256", name: "terminatedOn", type: "uint256" },
          { internalType: "uint256", name: "totalUsdPaid", type: "uint256" },
        ],
        internalType: "struct IOrbitSphere.SphereMetadata",
        name: "sphere",
        type: "tuple",
      },
      {
        components: [
          { internalType: "bytes32", name: "iType", type: "bytes32" },
          { internalType: "uint64", name: "hourlyRate", type: "uint64" },
          { internalType: "uint64", name: "noOfCPUs", type: "uint64" },
          { internalType: "uint64", name: "noOfGPUs", type: "uint64" },
          { internalType: "uint64", name: "memoryGBs", type: "uint64" },
        ],
        internalType: "struct IOrbitSphere.InstanceMetadata",
        name: "instance",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "instanceType", type: "bytes32" },
      {
        internalType: "uint256",
        name: "rentingForNoOfSeconds",
        type: "uint256",
      },
    ],
    name: "getOrbitSphereInstanceCost",
    outputs: [{ internalType: "uint256", name: "usdCost", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "role", type: "bytes32" }],
    name: "getRoleAdmin",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "holder", type: "address" }],
    name: "getSphereIdsByTenant",
    outputs: [{ internalType: "uint256[]", name: "ids", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "role", type: "bytes32" },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "role", type: "bytes32" },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "hasRole",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "instanceType", type: "bytes32" },
    ],
    name: "isActiveInstanceType",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "region", type: "bytes32" }],
    name: "isActiveRegion",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32[]", name: "instanceTypes", type: "bytes32[]" },
    ],
    name: "removeInstanceTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32[]", name: "regions", type: "bytes32[]" }],
    name: "removeRegions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "role", type: "bytes32" },
      { internalType: "address", name: "callerConfirmation", type: "address" },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "region", type: "bytes32" },
      { internalType: "bytes32", name: "instanceType", type: "bytes32" },
      { internalType: "uint256", name: "rentalDuration", type: "uint256" },
      { internalType: "bytes", name: "sshPublicKey", type: "bytes" },
    ],
    name: "rentSphere",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "role", type: "bytes32" },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "sphereId", type: "uint256" }],
    name: "terminateSphere",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "address", name: "", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export default orbitSphereAbi;
